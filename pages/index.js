import { useState, useMemo } from 'react';
import Head from 'next/head';
import {
  Heading,
  Container,
  Box,
  StackDivider,
  VStack,
  HStack,
  IconButton,
  Button,
  Icon,
  Menu,
  MenuButton,
  MenuList,
  MenuItem,
} from '@chakra-ui/react';
import { IoShuffle, IoSettingsSharp } from 'react-icons/io5';
import { MdPersonAdd } from 'react-icons/md';
import useStickyState from '../hooks/useStickyState';
import AppMenu from '../components/AppMenu';
import Team from '../components/Team';
import chunk from 'lodash/chunk';

const DEFAULT_PLAYERS = [
  { id: 1, name: 'Player 1', gp: 0 },
  { id: 2, name: 'Player 2', gp: 0 },
  { id: 3, name: 'Player 3', gp: 0 },
  { id: 4, name: 'Player 4', gp: 0 },
  { id: 5, name: 'Player 5', gp: 0 },
  { id: 6, name: 'Player 6', gp: 0 },
  { id: 7, name: 'Player 7', gp: 0 },
];

const DEFAULT_TEAM_COUNT = 2;
const DEFAULT_TEAM_SIZE = 3;

function DocHead() {
  return (
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
  );
}

export default function Home() {
  const [teamSize, setTeamSize] = useStickyState(
    DEFAULT_TEAM_SIZE,
    'teamSize',
  );
  const [teamCount, setTeamCount] = useStickyState(
    DEFAULT_TEAM_COUNT,
    'teamCount',
  );
  const [players, setPlayers] = useStickyState(
    DEFAULT_PLAYERS,
    'players',
  );

  const teams = useMemo(() => {
    const effectiveTeamSize = Math.min(
      teamSize,
      Math.round(players.length / teamCount),
    );

    const playerTeams = chunk(players, effectiveTeamSize);

    if (playerTeams.length < teamCount + 1) {
      return [...playerTeams, []];
    }

    return playerTeams;
  }, [players]);

  function handleShufflePlayers() {
    console.log('handleShufflePlayers');

    const shuffledPlayers = [...players]
      .sort(() => Math.random() - 0.5)
      .sort((a, b) => a.gp - b.gp);
    setPlayers(shuffledPlayers);
  }

  return (
    <Container>
      <DocHead />
      <Box as="header" py={4}>
        <HStack justify="space-between">
          <AppMenu
            teamSize={teamSize}
            onChangeTeamSize={val => setTeamSize(val)}
          />

          <Button colorScheme="blue" leftIcon={<MdPersonAdd />}>
            Add Player
          </Button>
        </HStack>
      </Box>
      <main>
        <VStack spacing={8} align="stretch">
          {teams.map((team, teamIndex) => {
            const teamName =
              teamIndex >= teamCount
                ? 'Bench'
                : `Team ${teamIndex + 1}`;
            return (
              <Team key={teamIndex} name={teamName} players={team} />
            );
          })}
        </VStack>
      </main>
      <Box
        as="footer"
        pos="fixed"
        right="4"
        bottom="4"
        transform="scale(1.5)"
        transformOrigin="right bottom"
      >
        <IconButton
          size="lg"
          fontSize="4xl"
          isRound
          icon={<IoShuffle />}
          colorScheme="yellow"
          onClick={handleShufflePlayers}
        ></IconButton>
      </Box>
    </Container>
  );
}
